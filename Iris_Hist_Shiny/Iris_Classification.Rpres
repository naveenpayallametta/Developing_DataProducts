Iris dataset Classification using RShiny App.
========================================================
author: Naveen Payallametta
date: 5th Nov 2016
autosize: true

Description
========================================================

-This App shows the application of 3 different classification algorithms (rpart, randomForest and lda) on the iris dataset.

User Input Navigation
========================================================

--User selects the number of  observations of the iris dataset, where n is the number of observations specified on the sidebar panel (5 by default).


-It trains a classification algorithm chosen by the user on the sidepar panel.

-Splitting the iris dataset in training and testing sets based on the proportion chosen on the sidebar (by defuault 70% training 30% testing).

-Thirdly the  User selects one of the Classification model either 'rpart', 'randomForest' or 'lda' and derive the summary results of it.


Algorithm
========================================================

```{r, eval=FALSE}
# apply selected classification algorithm
    if(algorithmInput()=="rpart") {
      
      # print classification parameters
      print("Algorithm selected: rpart")
      print(paste("Training set: ", input$slidertrainsplit*100, "%", sep = ""))
      print(paste("Testing set: ", (1-input$slidertrainsplit)*100, "%", sep = ""))
      
      # build rpart model
      library(rpart)
      set.seed(98763)
      model <- rpart(Species ~ . , data= iris)
      
      # test rpart model
      pred <- predict(model, testing, type  = "class")
      print(table(predicted = pred, reference = testing$Species))
      
      # print model
      summary(model)
      
    } 
  
  else if(algorithmInput()=="randomForest")
    {
      
      # print classification parameters
      print("Algorithm selected: randomForest")
      print(paste("Training set: ", input$slidertrainsplit*100, "%", sep = ""))
      print(paste("Testing set: ", (1-input$slidertrainsplit)*100, "%", sep = ""))
      
      # build randomForest model
      library(randomForest)
      set.seed(98763)
      model <- randomForest(Species ~ . , data= iris)
      
      
      # test randomForest model
      pred <- predict(model, testing, type  = "class")
      print(table(predicted = pred, reference = testing$Species))
      
      # print model
      summary(model)
      
    } 

  else if(algorithmInput()=="lda") 
    
    {
      
     # print classification parameters
      print("Algorithm selected: lda")
      print(paste("Training set: ", input$slidertrainsplit*100, "%", sep = ""))
      print(paste("Testing set: ", (1-input$slidertrainsplit)*100, "%", sep = ""))
      
      # build lda model
      library(MASS)
      set.seed(98763)
      model <- lda(Species ~ . , data= iris)
      
      # test lda model
      pred <- predict(model, testing, type  = "class")
      print(table(predicted = pred$class, reference = testing$Species))
      
    } 
```

References
========================================================
